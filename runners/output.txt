Loading saved embeddings....
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24345f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e294ed88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23e53b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2474dd0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2860638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2489fc8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24e65f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e294ea70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2911128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24d1680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e244dea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f2950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f8414488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f2a28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ed26c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24d1950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ed26c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e297f908>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23fe2d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2427ea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2468bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24744d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e29053f8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ec128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2495908>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24d7830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2905d40>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f8476248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e25403f8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2468c68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2474518>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9f80>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23b2dd0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2649200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f2e18>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2495908>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e29112d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2367320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e235a878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2da8bd8>)
Degenerate example (#40). Skipping.
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c7368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ecef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2420248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e254cb90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24635a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e248f170>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24ddef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24749e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a1320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c2ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2397e60>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23e0170>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2916290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243a5a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2420bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2911830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23d4248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e235ab48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2410878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2410440>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e242e290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23679e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e246fb00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e246f5f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24897a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24ddef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e238c560>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c2368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e290cc68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23c3cf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28ce0e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23c35a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23e0c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2420248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e239e5f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e25ae1b8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23e03b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23b7248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e244de18>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24d1488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2330cb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f9805a28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2410b00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2905758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2342368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23057e8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e239eab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e233b560>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28d5638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23c3e60>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28ec170>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a81b8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e239e830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2c83908>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e29553f8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e29055f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c74d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28ce638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a8a70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2420248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22bc050>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454ef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e235a3b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e235a128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22d7f80>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23b7638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22ee3f8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2410830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23bd1b8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23aca28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a13f8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23d1050>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a1b90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22d7ef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e234a320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243ac68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e285a1b8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c74d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2330368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22b1170>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22b16c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2367d88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a17e8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2474290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22eeb48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2305050>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22d7200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2489a70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a13f8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e226d680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e254cb90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83b1d88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e247a098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2384200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e247aa70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230a2d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2463fc8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2305ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22fb518>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2c04d88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e26534d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22fb290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243fb00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243f128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2474b48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e240a7e8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2284b00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243fb00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2384878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22ab488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e234a7a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243fd88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9f80>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac4d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23b2488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243f878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e234a680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24dd560>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e240aea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24744d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f8476c68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243fb00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2463c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230a2d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f8178c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230a098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230a6c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23da440>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2463320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e240aea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2468bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2463878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83ff878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac7e8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e226dd88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2392fc8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23843b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2351ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9ef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22c98c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22aba28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c7d40>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2474dd0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230a200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2474518>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2351ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e254cb90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac710>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230a098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24207a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ecb48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22b13b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e238cd40>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24dd128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a1e60>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243fef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2489878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2427f80>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e241c3b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23e5e18>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e238cd40>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2361830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c73b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e238cf38>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23bd1b8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230aa70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28e7638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23dad40>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2cb7b00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e246f6c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e238c368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e242eef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e228a200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e246ff38>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ec290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e3000ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac4d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e228a680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e241ce60>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2dcc1b8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f8468758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e30b0878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83ff5a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23c35f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2f0d098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2447d88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2410320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2d87a28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f840e170>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2fc69e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2f91b90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2397680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e26285f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2427518>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f84cd950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ad6cf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83b0d40>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3eaad58c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2f6a758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e3079ea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f8250290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23f9950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e228aa70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e3000710>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2da2bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ad1878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83b0d40>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2fd0cb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2933cf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ba6c68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2284320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2301248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2997758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f828ac20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22c9fc8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2cf35f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ed2128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2f0d098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2301ef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2abd560>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22fb200>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2933cf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2a23ef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f814b488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e230ad88>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22ab950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2962368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ba6c68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e29ae2d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2bd1ea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ed2128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83b6a28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f9528bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f02488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e29552d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2633c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f81ef9e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ac8c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e291f170>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2482a28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2ab7290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24683f8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f8224638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e228aa70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2694878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f02638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e3074830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e24742d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e285a8c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f7f6c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2b4c2d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2c117a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2e6f878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23b22d8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2a107e8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f828a950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e227ab90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2da2bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e3000f38>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e240a9e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e3000ef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23ec4d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2cff6c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2a28c68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83a98c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2c155a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2fd0cb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e290c560>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e261c758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f81bd680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e30f65a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23d48c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83b9098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e314ecb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2c835f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e26917a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2330e18>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2b01050>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22c2cf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22c2b48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f05f38>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2342680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f05290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2c117a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e239eb90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2feffc8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f84597e8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e239ef80>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2d71098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e233b290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83f9950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f81bd680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28d5710>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e261c518>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23e0a28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2434758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22c26c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e226dcb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23c8c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83f9ea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28ec1b8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2454c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83ff128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f81b0320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2301ea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2284368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e234a6c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e30f65a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22d75f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f79b48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2482ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2694368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28c2cf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22b1830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23fe3b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22d7ea8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83fa710>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2305c68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e234a878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2372e18>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e261c758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22ee4d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e237eef0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83f95f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2329710>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2694368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f02638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e261c758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e26917a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22b7b48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2329bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e239ef38>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e237ec68>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2317e60>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2fd0cb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e30c85a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e21fdcf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28d5638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f828aa70>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f81b00e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22dc5a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f05fc8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2f7a5a8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23b7998>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f7b170>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e226d368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2330440>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e225d248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e243a320>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a8758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28ce560>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2284830>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2c1ddd0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2404c20>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e21ed4d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2232b48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2482248>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2342a28>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2248dd0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e234a878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2fef440>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83f9e60>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e219cb48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28ceb00>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f81bd680>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e219c290>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e28a89e0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22b7368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e21f8e60>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2d486c8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e262ff38>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e239e950>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f01710>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e21e25f0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e21fd098>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f79cb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2434758>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2221638>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f3f01128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2329bd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83ff050>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e234a878>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e21e2b90>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e235a368>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2367ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22ee4d0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2367ab8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22c2cf8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83b9cb0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e21e7488>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2d807a0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22d7128>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3f83fab48>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e23fe560>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22408c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e220e3b0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2330440>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e220ebd8>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e22178c0>)
EXCEPTION: all the input array dimensions except for the concatenation axis must match exactly
Apply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})
Toposort index: 64
Inputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]
Inputs shapes: [(), (1, 90, 1), (16, 90, 300)]
Inputs strides: [(), (90, 1, 1), (27000, 300, 1)]
Inputs values: [array(2, dtype=int16), 'not shown', 'not shown']
Outputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__
    out = layer(out)
  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>
    concat = lambda layers: merge(layers, mode='concat')
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge
    name=name)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__
    self.add_inbound_node(layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node
    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))
  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask
    concatenated = K.concatenate(masks, axis=self.concat_axis)
  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate
    return T.concatenate([to_dense(x) for x in tensors], axis=axis)

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
sys.exc_info(): (<type 'exceptions.ValueError'>, ValueError('all the input array dimensions except for the concatenation axis must match exactly\nApply node that caused the error: Join(TensorConstant{2}, Elemwise{neq,no_inplace}.0, TensorConstant{(16, 90, 300) of 1})\nToposort index: 64\nInputs types: [TensorType(int16, scalar), TensorType(int8, (False, False, True)), TensorType(uint8, 3D)]\nInputs shapes: [(), (1, 90, 1), (16, 90, 300)]\nInputs strides: [(), (90, 1, 1), (27000, 300, 1)]\nInputs values: [array(2, dtype=int16), \'not shown\', \'not shown\']\nOutputs clients: [[Elemwise{neq,no_inplace}(Join.0, TensorConstant{(1, 1, 1) of 0})]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "/home/cogniton/research/code/ikelos/ikelos/layers/utility.py", line 72, in __call__\n    out = layer(out)\n  File "/home/cogniton/research/code/paper_repos/coling_2016/runners/../fergus/models/fergus_recurrent/model.py", line 41, in <lambda>\n    concat = lambda layers: merge(layers, mode=\'concat\')\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1552, in merge\n    name=name)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1191, in __init__\n    self.add_inbound_node(layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 572, in add_inbound_node\n    Node.create_node(self, inbound_layers, node_indices, tensor_indices)\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 155, in create_node\n    output_masks = to_list(outbound_layer.compute_mask(input_tensors, input_masks))\n  File "/home/cogniton/research/code/keras/keras/engine/topology.py", line 1432, in compute_mask\n    concatenated = K.concatenate(masks, axis=self.concat_axis)\n  File "/home/cogniton/research/code/keras/keras/backend/theano_backend.py", line 495, in concatenate\n    return T.concatenate([to_dense(x) for x in tensors], axis=axis)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.',), <traceback object at 0x7fa3e2311ef0>)
